
# Initial workflow to fetch repository from gitHub, build and test the source code
# a test report is also generated at the end

name: Build, test and analyze

on: # run on any push except on main
  push:
    branches-ignore:
      - main
    paths-ignore:
      - 'README.md'
      - 'doc/**'
  pull_request: # run for every pull request
    types: [opened, synchronize, reopened]
jobs:
  backend:
    name: Build and analyze backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'backend'
    steps:
      - uses: actions/checkout@v3 # get project from gitHub
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Cache local Maven repository # get/cache maven files
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build and test  # build with maven
        run: mvn clean test
      - name: Generate test report  # create test report
        uses: dorny/test-reporter@v1.4.3
        with:
          name: Backend test report
          path: "**/surefire-reports/TEST-*.xml"
          reporter: java-junit

  frontend:
    name: Build and analyze frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'frontend'
    steps:
      - name: Checkout code from repo
        uses: actions/checkout@v3
      - name: show tree # for testing
        run: tree
      - name: Node.js setup # node.js action to set up and cache node js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
      - run: npm install  # install packages
      - run: npm run test:ci # run karma tests
