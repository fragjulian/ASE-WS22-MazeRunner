
# will deploy the project to docker hub from where it can be pulled to docker

name: Deploy to Docker Hub

on: # run on push to main (only after successful pull-request)
  push:
    branches:
      - main
      #- CI-CD-Issue#71
    paths-ignore:
      - 'README.md'
      - 'doc/**'
jobs:
  build-docker-backend:
    name: Deploy backend to Dockerhub
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'backend'
    steps:
    - uses: actions/checkout@v3 # get project from gitHub
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: show tree # for debugging
      run: tree
    - name: Build and push backend
      uses: docker/build-push-action@v3
      with:
        context: .
        cache-from: type=gha # cache docker content
        cache-to: type=gha, mode=max
        file: ./backend/Dockerfile # creates backend container with this file
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/maze-runner-backend:latest

  build-docker-frontend:
    name: Deploy frontend to Dockerhub
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'frontend'
    steps:
      - uses: actions/checkout@v3 # get project from gitHub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: show tree # for debugging
        run: tree
      - name: Build and push frontend
        uses: docker/build-push-action@v3
        with:
          context: .
          cache-from: type=gha # cache docker content
          cache-to: type=gha, mode=max
          file: ./frontend/Dockerfile # creates frontend container with this file
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/maze-runner-frontend:latest

  selenium-on-deployment:
    name: Run UI tests on live server
    needs: [build-docker-backend, build-docker-frontend] # wait for previous steps
    runs-on: windows-latest
    defaults:
      run:
        working-directory: 'selenium'
    steps:
      - name: Checkout code from repo
        uses: actions/checkout@v3
      - name: Maven setup
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Wait for deployment to finish
        run: sleep 90
      - name: Run Selenium tests on live server
        run: mvn -DURL=https://ase.stulpinger.at -DPORT= clean test # no port
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          junit_files: "./selenium/target/surefire-reports/TEST-*.xml"
          check_name: "Selenium live server UI tests"

